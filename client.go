// Code generated by github.com/Yamashou/gqlgenc, DO NOT EDIT.

package client

import (
	"context"
	"net/http"

	"github.com/Yamashou/gqlgenc/clientv2"
	"github.com/shopemaa/shopemaa-go-client/models"
)

type ShopemaaGraphQLClient interface {
	StoreBySecret(ctx context.Context, interceptors ...clientv2.RequestInterceptor) (*StoreBySecret, error)
}

type Client struct {
	Client *clientv2.Client
}

func NewClient(cli *http.Client, baseURL string, options *clientv2.Options, interceptors ...clientv2.RequestInterceptor) ShopemaaGraphQLClient {
	return &Client{Client: clientv2.NewClient(cli, baseURL, options, interceptors...)}
}

type Query struct {
	Cart                                models.PCart                                   "json:\"cart\" graphql:\"cart\""
	PaymentMethods                      []*models.PaymentMethod                        "json:\"paymentMethods\" graphql:\"paymentMethods\""
	CheckPaymentProcessingFee           int                                            "json:\"checkPaymentProcessingFee\" graphql:\"checkPaymentProcessingFee\""
	AbandonedCarts                      []*models.Cart                                 "json:\"abandonedCarts\" graphql:\"abandonedCarts\""
	BlogPostsByAdmin                    []*models.BlogPost                             "json:\"blogPostsByAdmin\" graphql:\"blogPostsByAdmin\""
	BlogPostByAdmin                     models.BlogPost                                "json:\"blogPostByAdmin\" graphql:\"blogPostByAdmin\""
	BlogPosts                           []*models.PBlogPost                            "json:\"blogPosts\" graphql:\"blogPosts\""
	BlogPost                            models.PBlogPost                               "json:\"blogPost\" graphql:\"blogPost\""
	BlogPostBySlug                      models.PBlogPost                               "json:\"blogPostBySlug\" graphql:\"blogPostBySlug\""
	CategoriesByAdmin                   []*models.Category                             "json:\"categoriesByAdmin\" graphql:\"categoriesByAdmin\""
	CategoryByAdmin                     models.Category                                "json:\"categoryByAdmin\" graphql:\"categoryByAdmin\""
	Categories                          []*models.PCategory                            "json:\"categories\" graphql:\"categories\""
	Category                            models.PCategory                               "json:\"category\" graphql:\"category\""
	CollectionsByAdmin                  []*models.Collection                           "json:\"collectionsByAdmin\" graphql:\"collectionsByAdmin\""
	CollectionByAdmin                   models.Collection                              "json:\"collectionByAdmin\" graphql:\"collectionByAdmin\""
	Collections                         []*models.PCollection                          "json:\"collections\" graphql:\"collections\""
	Collection                          models.PCollection                             "json:\"collection\" graphql:\"collection\""
	CouponCode                          models.CouponCode                              "json:\"couponCode\" graphql:\"couponCode\""
	CouponCodes                         []*models.CouponCode                           "json:\"couponCodes\" graphql:\"couponCodes\""
	CheckDiscount                       int                                            "json:\"checkDiscount\" graphql:\"checkDiscount\""
	CheckDiscountForGuests              int                                            "json:\"checkDiscountForGuests\" graphql:\"checkDiscountForGuests\""
	CheckDiscountByAdmin                int                                            "json:\"checkDiscountByAdmin\" graphql:\"checkDiscountByAdmin\""
	CustomerProfile                     models.Customer                                "json:\"customerProfile\" graphql:\"customerProfile\""
	CustomersByAdmin                    []*models.SCustomer                            "json:\"customersByAdmin\" graphql:\"customersByAdmin\""
	MediaByAdmin                        []*models.ShopMedia                            "json:\"mediaByAdmin\" graphql:\"mediaByAdmin\""
	OrderByAdmin                        models.Order                                   "json:\"orderByAdmin\" graphql:\"orderByAdmin\""
	Order                               models.POrder                                  "json:\"order\" graphql:\"order\""
	OrderByCustomerEmail                models.POrder                                  "json:\"orderByCustomerEmail\" graphql:\"orderByCustomerEmail\""
	OrdersByAdmin                       []*models.Order                                "json:\"ordersByAdmin\" graphql:\"ordersByAdmin\""
	Orders                              []*models.POrder                               "json:\"orders\" graphql:\"orders\""
	Locations                           []*models.Location                             "json:\"locations\" graphql:\"locations\""
	LocationByID                        models.Location                                "json:\"locationById\" graphql:\"locationById\""
	ProductSearch                       []*models.PProduct                             "json:\"productSearch\" graphql:\"productSearch\""
	ProductSearchByAdmin                []*models.Product                              "json:\"productSearchByAdmin\" graphql:\"productSearchByAdmin\""
	ProductsByAdmin                     []*models.Product                              "json:\"productsByAdmin\" graphql:\"productsByAdmin\""
	ProductByAdmin                      models.Product                                 "json:\"productByAdmin\" graphql:\"productByAdmin\""
	Products                            []*models.PProduct                             "json:\"products\" graphql:\"products\""
	Product                             models.PProduct                                "json:\"product\" graphql:\"product\""
	ProductBySlug                       models.PProduct                                "json:\"productBySlug\" graphql:\"productBySlug\""
	ProductDigitalContentsForPreview    []*models.DigitalContent                       "json:\"productDigitalContentsForPreview\" graphql:\"productDigitalContentsForPreview\""
	ProductDigitalContents              []*models.DigitalContent                       "json:\"productDigitalContents\" graphql:\"productDigitalContents\""
	ProductDigitalContentsByCustomer    []*models.DigitalContent                       "json:\"productDigitalContentsByCustomer\" graphql:\"productDigitalContentsByCustomer\""
	ProductDigitalContentByAdmin        models.DigitalContent                          "json:\"productDigitalContentByAdmin\" graphql:\"productDigitalContentByAdmin\""
	ProductDigitalItemsByCustomer       []*models.DigitalItem                          "json:\"productDigitalItemsByCustomer\" graphql:\"productDigitalItemsByCustomer\""
	IsDigitalProductPurchasedByCustomer models.IsDigitalProductPurchasedByCustomerResp "json:\"isDigitalProductPurchasedByCustomer\" graphql:\"isDigitalProductPurchasedByCustomer\""
	Report                              models.Report                                  "json:\"report\" graphql:\"report\""
	ShippingMethodsByAdmin              []*models.ShippingMethod                       "json:\"shippingMethodsByAdmin\" graphql:\"shippingMethodsByAdmin\""
	ShippingMethodByAdmin               models.ShippingMethod                          "json:\"shippingMethodByAdmin\" graphql:\"shippingMethodByAdmin\""
	ShippingMethods                     []*models.ShippingMethod                       "json:\"shippingMethods\" graphql:\"shippingMethods\""
	ShippingMethod                      models.ShippingMethod                          "json:\"shippingMethod\" graphql:\"shippingMethod\""
	CheckShippingCharge                 int                                            "json:\"checkShippingCharge\" graphql:\"checkShippingCharge\""
	Stores                              []*models.Store                                "json:\"stores\" graphql:\"stores\""
	StoreSecrets                        []*models.StoreSecret                          "json:\"storeSecrets\" graphql:\"storeSecrets\""
	StoreByID                           models.Store                                   "json:\"storeById\" graphql:\"storeById\""
	StoreBySecret                       models.PStore                                  "json:\"storeBySecret\" graphql:\"storeBySecret\""
	StoreAppSecretByQuickLink           models.StoreSecret                             "json:\"storeAppSecretByQuickLink\" graphql:\"storeAppSecretByQuickLink\""
	StoreBanners                        []*models.PStoreBanner                         "json:\"storeBanners\" graphql:\"storeBanners\""
	StoreBannersByAdmin                 []*models.StoreBanner                          "json:\"storeBannersByAdmin\" graphql:\"storeBannersByAdmin\""
	StoreBannerByAdmin                  models.StoreBanner                             "json:\"storeBannerByAdmin\" graphql:\"storeBannerByAdmin\""
	StoreMenus                          []*models.PStoreMenu                           "json:\"storeMenus\" graphql:\"storeMenus\""
	StoreMenusByAdmin                   []*models.StoreMenu                            "json:\"storeMenusByAdmin\" graphql:\"storeMenusByAdmin\""
	StoreMenuByAdmin                    models.StoreMenu                               "json:\"storeMenuByAdmin\" graphql:\"storeMenuByAdmin\""
	StorePagesByAdmin                   []*models.StorePage                            "json:\"storePagesByAdmin\" graphql:\"storePagesByAdmin\""
	StorePageByAdmin                    models.StorePage                               "json:\"storePageByAdmin\" graphql:\"storePageByAdmin\""
	StorePages                          []*models.PStorePage                           "json:\"storePages\" graphql:\"storePages\""
	StorePage                           models.PStorePage                              "json:\"storePage\" graphql:\"storePage\""
	StorePageBySlug                     models.PStorePage                              "json:\"storePageBySlug\" graphql:\"storePageBySlug\""
}
type Mutation struct {
	NewCart                           models.PCart                       "json:\"newCart\" graphql:\"newCart\""
	UpdateCart                        models.PCart                       "json:\"updateCart\" graphql:\"updateCart\""
	NewBlogPost                       models.BlogPost                    "json:\"newBlogPost\" graphql:\"newBlogPost\""
	UpdateBlogPost                    models.BlogPost                    "json:\"updateBlogPost\" graphql:\"updateBlogPost\""
	DeleteBlogPost                    bool                               "json:\"deleteBlogPost\" graphql:\"deleteBlogPost\""
	BlogPostAddComment                models.BlogPostComment             "json:\"blogPostAddComment\" graphql:\"blogPostAddComment\""
	BlogPostUpdateComment             models.BlogPostComment             "json:\"blogPostUpdateComment\" graphql:\"blogPostUpdateComment\""
	BlogPostDeleteComment             bool                               "json:\"blogPostDeleteComment\" graphql:\"blogPostDeleteComment\""
	NewCategory                       models.Category                    "json:\"newCategory\" graphql:\"newCategory\""
	UpdateCategory                    models.Category                    "json:\"updateCategory\" graphql:\"updateCategory\""
	DeleteCategory                    bool                               "json:\"deleteCategory\" graphql:\"deleteCategory\""
	NewCollection                     models.Collection                  "json:\"newCollection\" graphql:\"newCollection\""
	UpdateCollection                  models.Collection                  "json:\"updateCollection\" graphql:\"updateCollection\""
	DeleteCollection                  bool                               "json:\"deleteCollection\" graphql:\"deleteCollection\""
	CollectionAddProducts             bool                               "json:\"collectionAddProducts\" graphql:\"collectionAddProducts\""
	CollectionRemoveProducts          bool                               "json:\"collectionRemoveProducts\" graphql:\"collectionRemoveProducts\""
	NewCouponCode                     models.CouponCode                  "json:\"newCouponCode\" graphql:\"newCouponCode\""
	UpdateCouponCode                  models.CouponCode                  "json:\"updateCouponCode\" graphql:\"updateCouponCode\""
	DeleteCouponCode                  bool                               "json:\"deleteCouponCode\" graphql:\"deleteCouponCode\""
	CustomerRegister                  models.RegisterCustomerResponse    "json:\"customerRegister\" graphql:\"customerRegister\""
	CustomerLogin                     models.LoginCustomerResponse       "json:\"customerLogin\" graphql:\"customerLogin\""
	CustomerMagicLoginRequest         bool                               "json:\"customerMagicLoginRequest\" graphql:\"customerMagicLoginRequest\""
	CustomerMagicLogin                models.LoginCustomerResponse       "json:\"customerMagicLogin\" graphql:\"customerMagicLogin\""
	CustomerResetPasswordRequest      bool                               "json:\"customerResetPasswordRequest\" graphql:\"customerResetPasswordRequest\""
	CustomerResetPassword             bool                               "json:\"customerResetPassword\" graphql:\"customerResetPassword\""
	CustomerChangePassword            bool                               "json:\"customerChangePassword\" graphql:\"customerChangePassword\""
	CustomerUpdateProfile             models.Customer                    "json:\"customerUpdateProfile\" graphql:\"customerUpdateProfile\""
	NewMedia                          string                             "json:\"newMedia\" graphql:\"newMedia\""
	DeleteMedia                       bool                               "json:\"deleteMedia\" graphql:\"deleteMedia\""
	OrderGuestCheckout                models.POrder                      "json:\"orderGuestCheckout\" graphql:\"orderGuestCheckout\""
	OrderCheckout                     models.POrder                      "json:\"orderCheckout\" graphql:\"orderCheckout\""
	OrderCheckoutByAdmin              models.Order                       "json:\"orderCheckoutByAdmin\" graphql:\"orderCheckoutByAdmin\""
	OrderGeneratePaymentNonce         models.GeneratePaymentNoneResponse "json:\"orderGeneratePaymentNonce\" graphql:\"orderGeneratePaymentNonce\""
	OrderGeneratePaymentNonceForGuest models.GeneratePaymentNoneResponse "json:\"orderGeneratePaymentNonceForGuest\" graphql:\"orderGeneratePaymentNonceForGuest\""
	OrderGenerateDigitalContent       models.OrderGenerateDigitalContent "json:\"orderGenerateDigitalContent\" graphql:\"orderGenerateDigitalContent\""
	OrderAddFeedback                  models.Feedback                    "json:\"orderAddFeedback\" graphql:\"orderAddFeedback\""
	OrderUpdateByAdmin                models.Order                       "json:\"orderUpdateByAdmin\" graphql:\"orderUpdateByAdmin\""
	UserRegister                      *models.RegisterUserResponse       "json:\"userRegister,omitempty\" graphql:\"userRegister\""
	UserLogin                         *models.LoginUserResponse          "json:\"userLogin,omitempty\" graphql:\"userLogin\""
	NewProduct                        models.Product                     "json:\"newProduct\" graphql:\"newProduct\""
	UpdateProduct                     models.Product                     "json:\"updateProduct\" graphql:\"updateProduct\""
	DeleteProduct                     bool                               "json:\"deleteProduct\" graphql:\"deleteProduct\""
	ProductAddVariation               models.ProductVariation            "json:\"productAddVariation\" graphql:\"productAddVariation\""
	ProductUpdateVariation            models.ProductVariation            "json:\"productUpdateVariation\" graphql:\"productUpdateVariation\""
	ProductRemoveVariation            bool                               "json:\"productRemoveVariation\" graphql:\"productRemoveVariation\""
	ProductAddAttribute               models.ProductAttribute            "json:\"productAddAttribute\" graphql:\"productAddAttribute\""
	ProductUpdateAttribute            models.ProductAttribute            "json:\"productUpdateAttribute\" graphql:\"productUpdateAttribute\""
	ProductRemoveAttribute            bool                               "json:\"productRemoveAttribute\" graphql:\"productRemoveAttribute\""
	ProductAddDigitalItem             models.DigitalItem                 "json:\"productAddDigitalItem\" graphql:\"productAddDigitalItem\""
	ProductUpdateDigitalItem          models.DigitalItem                 "json:\"productUpdateDigitalItem\" graphql:\"productUpdateDigitalItem\""
	ProductRemoveDigitalItem          bool                               "json:\"productRemoveDigitalItem\" graphql:\"productRemoveDigitalItem\""
	ProductAddDigitalContent          models.DigitalContent              "json:\"productAddDigitalContent\" graphql:\"productAddDigitalContent\""
	ProductUpdateDigitalContent       models.DigitalContent              "json:\"productUpdateDigitalContent\" graphql:\"productUpdateDigitalContent\""
	ProductRemoveDigitalContent       bool                               "json:\"productRemoveDigitalContent\" graphql:\"productRemoveDigitalContent\""
	NewShippingMethod                 models.ShippingMethod              "json:\"newShippingMethod\" graphql:\"newShippingMethod\""
	UpdateShippingMethod              models.ShippingMethod              "json:\"updateShippingMethod\" graphql:\"updateShippingMethod\""
	DeleteShippingMethod              bool                               "json:\"deleteShippingMethod\" graphql:\"deleteShippingMethod\""
	NewStore                          models.Store                       "json:\"newStore\" graphql:\"newStore\""
	UpdateStore                       bool                               "json:\"updateStore\" graphql:\"updateStore\""
	UpdateStoreBySecret               bool                               "json:\"updateStoreBySecret\" graphql:\"updateStoreBySecret\""
	ToggleQuickLink                   bool                               "json:\"toggleQuickLink\" graphql:\"toggleQuickLink\""
	DeleteStore                       bool                               "json:\"deleteStore\" graphql:\"deleteStore\""
	NewStoreSecret                    models.StoreSecret                 "json:\"newStoreSecret\" graphql:\"newStoreSecret\""
	DeleteStoreSecret                 bool                               "json:\"deleteStoreSecret\" graphql:\"deleteStoreSecret\""
	NewStoreBanner                    models.StoreBanner                 "json:\"newStoreBanner\" graphql:\"newStoreBanner\""
	UpdateStoreBanner                 models.StoreBanner                 "json:\"updateStoreBanner\" graphql:\"updateStoreBanner\""
	DeleteStoreBanner                 bool                               "json:\"deleteStoreBanner\" graphql:\"deleteStoreBanner\""
	NewStoreMenu                      models.StoreMenu                   "json:\"newStoreMenu\" graphql:\"newStoreMenu\""
	UpdateStoreMenu                   models.StoreMenu                   "json:\"updateStoreMenu\" graphql:\"updateStoreMenu\""
	DeleteStoreMenu                   bool                               "json:\"deleteStoreMenu\" graphql:\"deleteStoreMenu\""
	NewStorePage                      models.StorePage                   "json:\"newStorePage\" graphql:\"newStorePage\""
	UpdateStorePage                   models.StorePage                   "json:\"updateStorePage\" graphql:\"updateStorePage\""
	DeleteStorePage                   bool                               "json:\"deleteStorePage\" graphql:\"deleteStorePage\""
}
type StoreBySecret_StoreBySecret_Location struct {
	ID        string "json:\"id\" graphql:\"id\""
	Name      string "json:\"name\" graphql:\"name\""
	ShortCode string "json:\"shortCode\" graphql:\"shortCode\""
}

func (t *StoreBySecret_StoreBySecret_Location) GetID() string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret_Location{}
	}
	return t.ID
}
func (t *StoreBySecret_StoreBySecret_Location) GetName() string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret_Location{}
	}
	return t.Name
}
func (t *StoreBySecret_StoreBySecret_Location) GetShortCode() string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret_Location{}
	}
	return t.ShortCode
}

type StoreBySecret_StoreBySecret struct {
	Name            string                                "json:\"name\" graphql:\"name\""
	Title           *string                               "json:\"title,omitempty\" graphql:\"title\""
	Description     *string                               "json:\"description,omitempty\" graphql:\"description\""
	Tags            []string                              "json:\"tags,omitempty\" graphql:\"tags\""
	MetaName        *string                               "json:\"metaName,omitempty\" graphql:\"metaName\""
	MetaDescription *string                               "json:\"metaDescription,omitempty\" graphql:\"metaDescription\""
	MetaTags        []string                              "json:\"metaTags,omitempty\" graphql:\"metaTags\""
	Logo            *string                               "json:\"logo,omitempty\" graphql:\"logo\""
	Favicon         *string                               "json:\"favicon,omitempty\" graphql:\"favicon\""
	BannerImage     *string                               "json:\"bannerImage,omitempty\" graphql:\"bannerImage\""
	IsOpen          bool                                  "json:\"isOpen\" graphql:\"isOpen\""
	Currency        models.Currency                       "json:\"currency\" graphql:\"currency\""
	Website         *string                               "json:\"website,omitempty\" graphql:\"website\""
	SupportEmail    *string                               "json:\"supportEmail,omitempty\" graphql:\"supportEmail\""
	SupportPhone    *string                               "json:\"supportPhone,omitempty\" graphql:\"supportPhone\""
	CreatedAt       string                                "json:\"createdAt\" graphql:\"createdAt\""
	Street          *string                               "json:\"street,omitempty\" graphql:\"street\""
	StreetOptional  *string                               "json:\"streetOptional,omitempty\" graphql:\"streetOptional\""
	City            *string                               "json:\"city,omitempty\" graphql:\"city\""
	State           *string                               "json:\"state,omitempty\" graphql:\"state\""
	Postcode        *string                               "json:\"postcode,omitempty\" graphql:\"postcode\""
	Location        *StoreBySecret_StoreBySecret_Location "json:\"location,omitempty\" graphql:\"location\""
}

func (t *StoreBySecret_StoreBySecret) GetName() string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.Name
}
func (t *StoreBySecret_StoreBySecret) GetTitle() *string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.Title
}
func (t *StoreBySecret_StoreBySecret) GetDescription() *string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.Description
}
func (t *StoreBySecret_StoreBySecret) GetTags() []string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.Tags
}
func (t *StoreBySecret_StoreBySecret) GetMetaName() *string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.MetaName
}
func (t *StoreBySecret_StoreBySecret) GetMetaDescription() *string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.MetaDescription
}
func (t *StoreBySecret_StoreBySecret) GetMetaTags() []string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.MetaTags
}
func (t *StoreBySecret_StoreBySecret) GetLogo() *string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.Logo
}
func (t *StoreBySecret_StoreBySecret) GetFavicon() *string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.Favicon
}
func (t *StoreBySecret_StoreBySecret) GetBannerImage() *string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.BannerImage
}
func (t *StoreBySecret_StoreBySecret) GetIsOpen() bool {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.IsOpen
}
func (t *StoreBySecret_StoreBySecret) GetCurrency() *models.Currency {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return &t.Currency
}
func (t *StoreBySecret_StoreBySecret) GetWebsite() *string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.Website
}
func (t *StoreBySecret_StoreBySecret) GetSupportEmail() *string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.SupportEmail
}
func (t *StoreBySecret_StoreBySecret) GetSupportPhone() *string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.SupportPhone
}
func (t *StoreBySecret_StoreBySecret) GetCreatedAt() string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.CreatedAt
}
func (t *StoreBySecret_StoreBySecret) GetStreet() *string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.Street
}
func (t *StoreBySecret_StoreBySecret) GetStreetOptional() *string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.StreetOptional
}
func (t *StoreBySecret_StoreBySecret) GetCity() *string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.City
}
func (t *StoreBySecret_StoreBySecret) GetState() *string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.State
}
func (t *StoreBySecret_StoreBySecret) GetPostcode() *string {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.Postcode
}
func (t *StoreBySecret_StoreBySecret) GetLocation() *StoreBySecret_StoreBySecret_Location {
	if t == nil {
		t = &StoreBySecret_StoreBySecret{}
	}
	return t.Location
}

type StoreBySecret struct {
	StoreBySecret StoreBySecret_StoreBySecret "json:\"storeBySecret\" graphql:\"storeBySecret\""
}

func (t *StoreBySecret) GetStoreBySecret() *StoreBySecret_StoreBySecret {
	if t == nil {
		t = &StoreBySecret{}
	}
	return &t.StoreBySecret
}

const StoreBySecretDocument = `query StoreBySecret {
	storeBySecret {
		name
		title
		description
		tags
		metaName
		metaDescription
		metaTags
		logo
		favicon
		bannerImage
		isOpen
		currency
		website
		supportEmail
		supportPhone
		createdAt
		street
		streetOptional
		city
		state
		postcode
		location {
			id
			name
			shortCode
		}
	}
}
`

func (c *Client) StoreBySecret(ctx context.Context, interceptors ...clientv2.RequestInterceptor) (*StoreBySecret, error) {
	vars := map[string]interface{}{}

	var res StoreBySecret
	if err := c.Client.Post(ctx, "StoreBySecret", StoreBySecretDocument, &res, vars, interceptors...); err != nil {
		return nil, err
	}

	return &res, nil
}
